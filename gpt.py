#!/usr/bin/env python3

from __future__ import annotations

import os

from yandex_cloud_ml_sdk import YCloudML
from dotenv import load_dotenv

load_dotenv()

AUTH_TOKEN = os.getenv('AUTH_TOKEN')
FOLDER_ID = os.getenv('FOLDER_ID')


def del_contacts_gpt(text):
    messages = [
        {
            "role": "system",
            "text": """
            Ты — фильтр вакансий.
На вход тебе дается текст вакансии.
Твоя задача:

Определи, проходит ли вакансия по всем правилам:

Локация:

✅ Проходит, если указано:

"РБ"

"РБ" в комбинации с другими странами

"Дружественные страны" (Казахстан, Армения, Киргизия, Азербайджан, Беларусь)

"Любые" или "Без ограничений"

❌ Отсекается, если:

Указана только "РФ"

Перечень стран, не включающий РБ

Указано "кроме РБ"

Гражданство:

✅ Проходит, если указано:

"РБ"

"РФ"

"Дружественные страны" (Казахстан, Армения, Киргизия, Азербайджан, Беларусь)

"Любые" или "Без ограничений"

❌ Отсекается, если:

Указаны другие страны

Указано "кроме РБ"

Условия оплаты:

❌ Если в тексте есть упоминание условий оплаты (например: "отсрочка 35 рабочих дней", "акты поквартально"), вакансия отсекается.

Если вакансия проходит, полностью удали из текста упоминания об условиях оплаты.

Если вакансия не проходит хотя бы по одному правилу → верни None.

Если вакансия проходит:

Удали все контакты (email, телефон, ссылки, телеграм).

Определи ставку (сумму оплаты или диапазон) и сохрани её как строку.Если в тексте указаны две ставки — для РФ и для не РФ — всегда используй ставку для не РФ.
Пример:
Ставка для партнеров РФ 3517 / Ставка для партнеров не РФ 3120
→ результат: 3120.

Если ставка указана только одна, используй её.
Возвращай только число, без валют, слов, знаков /, от, ~ и т.п.

Верни результат в формате Python-словаря:

{
    "text": "<очищенный текст вакансии>",
    "rate": "<ставка>"
}
Ставка должна быть выделена только из суммы оплаты (например: "1000 USD", "15 BYN/час", "от 2000 BYN", "договорная").

Не выдумывай данные. Если ставки нет — укажи "rate": None.
            """
        },
        {
            "role": "user",
            "text": text,
        },
    ]

    sdk = YCloudML(
        folder_id=FOLDER_ID,
        auth= AUTH_TOKEN,
    )



    result = sdk.models.completions("yandexgpt").configure(temperature=0.5).run(messages)
    clean_text = result.alternatives[0].text
    cleaned = clean_text.strip("`\n '")
    print(cleaned)
    
    return cleaned

