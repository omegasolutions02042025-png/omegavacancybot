#!/usr/bin/env python3

from __future__ import annotations

import ast
import os
import json
import datetime

from yandex_cloud_ml_sdk import YCloudML
from dotenv import load_dotenv

load_dotenv()

AUTH_TOKEN = os.getenv('AUTH_TOKEN')
FOLDER_ID = os.getenv('FOLDER_ID')

sdk = YCloudML(
    folder_id=FOLDER_ID,
    auth=AUTH_TOKEN,
)

async def check_duration_and_deadline_gpt(text):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - '–î–ê', –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç—Å–µ—á—å –ø–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –¥–µ–¥–ª–∞–π–Ω—É
    - '–ù–ï–¢', –µ—Å–ª–∏ –≤—Å—ë –æ–∫
    - '–£–¢–û–ß–ù–ò–¢–¨', –µ—Å–ª–∏ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ—Ç –Ω–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–∏ –¥–µ–¥–ª–∞–π–Ω–∞
    """
    current_date = datetime.date.today().strftime("%d.%m.%Y")
    messages = [
        {
            "role": "system",
            "text": f"""
            –ü—Ä–æ–≤–µ—Ä—å —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –≤–µ—Ä–Ω–∏ –æ–¥–∏–Ω –∏–∑ —Ç—Ä—ë—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
            - "–î–ê" ‚Üí –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç—Å–µ—á—å –ø–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–º—É –ø—Ä–∞–≤–∏–ª—É.
            - "–ù–ï–¢" ‚Üí –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ.
            - "–£–¢–û–ß–ù–ò–¢–¨" ‚Üí –µ—Å–ª–∏ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∏ –æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞, –Ω–∏ –æ –¥–µ–¥–ª–∞–π–Ω–µ.

            –ò—Å–ø–æ–ª—å–∑—É–π –ª–æ–≥–∏–∫—É –ò–õ–ò (OR) –¥–ª—è –æ—Ç—Å–µ—á–µ–Ω–∏—è.

            –ü—Ä–∞–≤–∏–ª–æ 1 (–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å): –û—Ç—Å–µ—á—å, –µ—Å–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ —Å—Ä–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞ –º–µ–Ω–µ–µ 3 –º–µ—Å—è—Ü–µ–≤. 
            –ü—Ä–æ–µ–∫—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç 3 –º–µ—Å—è—Ü–µ–≤ –∏ –±–æ–ª–µ–µ.
            –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è –æ—Ç—Å–µ–≤–∞: "1 –º–µ—Å—è—Ü", "2 –º–µ—Å", "–¥–æ 2 –º–µ—Å—è—Ü–µ–≤", "–º–µ–Ω–µ–µ 3 –º–µ—Å—è—Ü–µ–≤", "2 –º–µ—Å—è—Ü–∞", "–æ—Ç 2 –º–µ—Å—è—Ü–µ–≤" –∏ —Ç.–ø.
            –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞: "3 –º–µ—Å", "–æ—Ç 3 –º–µ—Å", "3+ –º–µ—Å", "4 –º–µ—Å", "–æ—Ç 6 –º–µ—Å", "6+ –º–µ—Å" –∏ —Ç.–ø.
            –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ '–æ—Ç 3—Ö –º–µ—Å—è—Ü–µ–≤ +' ‚Äî –ù–ï –æ—Ç—Å–µ–∫–∞—Ç—å (—ç—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç).

            –ü—Ä–∞–≤–∏–ª–æ 2 (–î–µ–¥–ª–∞–π–Ω): –û—Ç—Å–µ—á—å, –µ—Å–ª–∏ –¥–µ–¥–ª–∞–π–Ω –≤ –ø—Ä–æ—à–ª–æ–º –∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è. –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞: {current_date}.

            ‚ö†Ô∏è –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –≤–æ–æ–±—â–µ –Ω–µ—Ç –Ω–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–∏ –¥–µ–¥–ª–∞–π–Ω–∞ ‚Äî –≤–µ—Ä–Ω–∏ "–£–¢–û–ß–ù–ò–¢–¨".
            """
        },
        {
            "role": "user",
            "text": text,
        },
    ]

    try:
        result = (sdk.models.completions("yandexgpt")
                  .configure(temperature=0.1)
                  .run_deferred(messages, timeout=60)
                  ).wait()
        return result.alternatives[0].text.strip()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return "–£–¢–û–ß–ù–ò–¢–¨"

async def process_bonus_requirements_gpt(text: str) -> str:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∏–ø–∞ "–ë—É–¥–µ—Ç –ø–ª—é—Å–æ–º" –∏ —É–¥–∞–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏—Ö,
    –æ—Å—Ç–∞–≤–ª—è—è —Ç–µ–∫—Å—Ç –ø–æ–¥ –Ω–∏–º–∏ –Ω–∞ –º–µ—Å—Ç–µ.
    """
    messages = [
        {
            "role": "system",
            "text": """
            –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–π—Ç–∏ –≤ —Ç–µ–∫—Å—Ç–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —É–¥–∞–ª–∏—Ç—å **—Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º**, –æ—Å—Ç–∞–≤–∏–≤ –≤–µ—Å—å –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.

            1.  **–ù–∞–π–¥–∏ —Å—Ç—Ä–æ–∫–∏**, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–¥–Ω–æ–º—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–æ–µ—Ç–æ—á–∏–µ –∏–ª–∏ —ç–º–æ–¥–∑–∏ ‚ûï):
                * `–ë—É–¥–µ—Ç –ø–ª—é—Å–æ–º`
                * `–ü–ª—é—Å–æ–º –±—É–¥–µ—Ç`
                * `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ`
                * `–î–æ–ø. —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è`
                * `–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ`
                * `–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è`

            2.  **–î–µ–π—Å—Ç–≤–∏–µ:** –£–¥–∞–ª–∏ **—Ç–æ–ª—å–∫–æ** –Ω–∞–π–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º. –ù–µ —Ç—Ä–æ–≥–∞–π, –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–π –∏ –Ω–µ —É–¥–∞–ª—è–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ —ç—Ç–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º.

            3.  **–í–ê–ñ–ù–û–ï –£–°–õ–û–í–ò–ï:** –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –≤–µ—Ä–Ω–∏ –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π. –°–æ—Ö—Ä–∞–Ω—è–π –≤—Å–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –∞–±–∑–∞—Ü—ã.
            """
        },
        {
            "role": "user",
            "text": text,
        },
    ]
    try:
        result = (sdk.models.completions("yandexgpt").configure(temperature=0.1).run_deferred(messages, timeout=120)).wait()
        return result.alternatives[0].text
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ '–ë—É–¥–µ—Ç –ø–ª—é—Å–æ–º': {e}")
        return text # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç    
     # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
async def del_contacts_gpt(text):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–∏.
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ—á–∏—Å—Ç–∫—É, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
    """
    messages = [
        {
            "role": "system",
            "text": """
            –¢—ã ‚Äî —Ñ–∏–ª—å—Ç—Ä –≤–∞–∫–∞–Ω—Å–∏–π.
            –ù–∞ –≤—Ö–æ–¥ —Ç–µ–±–µ –¥–∞–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ, –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏ –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.

            ### –≠—Ç–∞–ø 1: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
            –ï—Å–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ö–æ—Ç—è –±—ã –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –ø—Ä–∞–≤–∏–ª –Ω–∏–∂–µ ‚Üí –≤–µ—Ä–Ω–∏ null.

            **–õ–æ–∫–∞—Ü–∏—è:**
            * ‚úÖ **–ü—Ä–æ—Ö–æ–¥–∏—Ç**, –µ—Å–ª–∏: —É–∫–∞–∑–∞–Ω–æ "–†–ë", "–†–ë" —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏, "–î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã" (–≤–∫–ª—é—á–∞—è –ë–µ–ª–∞—Ä—É—Å—å), "–õ—é–±—ã–µ", "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", '–†–§ (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ)'.
            * ‚ùå **–û—Ç—Å–µ–∫–∞–µ—Ç—Å—è**, –µ—Å–ª–∏: —Ç–æ–ª—å–∫–æ "–†–§"/"–†–æ—Å—Å–∏—è", –ø–µ—Ä–µ—á–µ–Ω—å —Å—Ç—Ä–∞–Ω –±–µ–∑ –†–ë, –∏–ª–∏ —É–∫–∞–∑–∞–Ω–æ "–∫—Ä–æ–º–µ –†–ë".
            * –ï—Å–ª–∏ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ —É–∫–∞–∑–∞–Ω–æ "–†–§ (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ)", —Å—á–∏—Ç–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–º.
            **–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ:**
            * ‚úÖ **–ü—Ä–æ—Ö–æ–¥–∏—Ç**, –µ—Å–ª–∏: "–†–ë", "–†–§", "–î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã" (–≤–∫–ª—é—á–∞—è –ë–µ–ª–∞—Ä—É—Å—å), "–õ—é–±—ã–µ", "–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π", "–ë–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã".
            * ‚ùå **–û—Ç—Å–µ–∫–∞–µ—Ç—Å—è**, –µ—Å–ª–∏: —É–∫–∞–∑–∞–Ω—ã —Å—Ç—Ä–∞–Ω—ã, –∏—Å–∫–ª—é—á–∞—é—â–∏–µ –†–ë, –∏–ª–∏ "–∫—Ä–æ–º–µ –†–ë".

            **–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã:**
            * ‚ùå **–û—Ç—Å–µ–∫–∞–µ—Ç—Å—è**, –µ—Å–ª–∏: –æ–ø–ª–∞—Ç–∞ > 35 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –∏–ª–∏ > 50 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π, –ª–∏–±–æ –µ—Å—Ç—å —Ñ—Ä–∞–∑—ã "–∞–∫—Ç—ã –ø–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ", "–ø–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–µ –∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∫–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –æ–ø–ª–∞—Ç–∞", "–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ".
            * ‚ùå **–û—Ç—Å–µ–∫–∞–µ—Ç—Å—è**, –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å —Å–ª–æ–≤–æ "—Å—Ç–æ–ø" –∏–ª–∏ "–°–¢–û–ü".

            ### –≠—Ç–∞–ø 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ—á–∏—Å—Ç–∫–∞ (–µ—Å–ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è –ø—Ä–æ—à–ª–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é)

            **1. –ö–æ–Ω—Ç–∞–∫—Ç—ã:**
            * –ù–∞–π–¥–∏ –±–ª–æ–∫ "–í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚û°Ô∏è@username...". –ó–∞–º–µ–Ω–∏ –µ–≥–æ –Ω–∞ "–í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ –î–º–∏—Ç—Ä–∏—é ‚û°Ô∏è@Dimitryver. –£–∫–∞–∑–∞—Ç—å üÜî –∑–∞–ø—Ä–æ—Å–∞.".
            * –£–¥–∞–ª–∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã: Telegram (@...), —Ç–µ–ª–µ—Ñ–æ–Ω—ã, email, —Å—Å—ã–ª–∫–∏.
            * **–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –°–û–•–†–ê–ù–ò–¢–¨ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ:", "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤ –†–õ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É" –∏ —Ç.–ø.) –≤ —Ç–µ–∫—Å—Ç–µ.**
            **2. –ó–∞–≥–æ–ª–æ–≤–æ–∫ (`vacancy_title`):**
            2. –ó–∞–≥–æ–ª–æ–≤–æ–∫ (`vacancy_title`):
          * –ï—Å–ª–∏ –≤ –Ω–∞—á–∞–ª–µ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞-–∑–∞–≥–æ–ª–æ–≤–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "ü•á Java —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫..."), —É–¥–∞–ª–∏ –µ—ë –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –≤–µ—Ä–Ω–∏ –≤ –∫–ª—é—á "vacancy_title" (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è —ç–º–æ–¥–∑–∏ –∏ –ø—Ä–æ–±–µ–ª—ã). –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî null.

            **3. ID –í–∞–∫–∞–Ω—Å–∏–∏ (`vacancy_id`):**  
            * –ù–∞–π–¥–∏ –ø–µ—Ä–≤—ã–π ID —Ñ–æ—Ä–º–∞—Ç–∞ **"üÜî XX-1234", "üÜî 8581", "XX-1234", "8581", "1—Å 8474" –∏–ª–∏ "1—Å 1234"**.. –£–¥–∞–ª–∏ –µ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –≤–µ—Ä–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–ª—é—á "vacancy_id" –±–µ–∑ —Å–∏–º–≤–æ–ª–∞ üÜî. –£–¥–∞–ª–∏ –µ–≥–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ –≤–µ—Ä–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–ª—é—á "vacancy_id" (–±–µ–∑ "üÜî"). –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî null.

            **4. –°—Ç–∞–≤–∫–∞ (`rate`):**
            * –ù–∞–π–¥–∏ —Å—Ç–∞–≤–∫—É. –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞–≤–∫–∞ –¥–ª—è –†–§ –∏ –Ω–µ –¥–ª—è –†–§, –±–µ—Ä–∏ –¥–ª—è –Ω–µ –†–§. –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ. –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∏ –Ω–µ—Ç ‚Äî –≤–µ—Ä–Ω–∏ 0.
            * –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã —Å—Ç—Ä–æ–∫, –≥–¥–µ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è:
            - "–°—Ç–∞–≤–∫–∞ –∑–∞–∫—É–ø–∫–∏"
            - "–°—Ç–∞–≤–∫–∞"
            - "–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã"
            - "–û–ø–ª–∞—Ç–∞"
            - "–û—Ç—Å—Ä–æ—á–∫–∞"
            - "–ê–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
            - —á–∏—Å–ª–∞ –≤ –¥–Ω—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: "35 —Ä.–¥.", "50 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π", "45 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π")
            * –≠—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ –∏—Ö —á–∞—Å—Ç–∏ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é.
            * ‚ùóÔ∏è –ü—Ä–∏ —ç—Ç–æ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å—ë, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ:", "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤ –†–õ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É").


            **5. –î–µ–¥–ª–∞–π–Ω ('deadline_date', 'deadline_time'):**
            * –ù–∞–π–¥–∏ –¥–µ–¥–ª–∞–π–Ω "–¥–æ DD.MM.YYYY HH:MM". –ò–∑–≤–ª–µ–∫–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–∏. –ï—Å–ª–∏ –∏—Ö –Ω–µ—Ç ‚Äî null.
            
            
            
            **6. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:**
            * ‚ùóÔ∏è **–ö–õ–Æ–ß–ï–í–û–ï –ü–†–ê–í–ò–õ–û:** –í –∏—Ç–æ–≥–æ–≤–æ–º –ø–æ–ª–µ "text" —Å–æ—Ö—Ä–∞–Ω–∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ –∏—Å—Ö–æ–¥–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫, –∞–±–∑–∞—Ü—ã –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤. –ù–µ –º–µ–Ω—è–π –ø–æ—Ä—è–¥–æ–∫ —Å—Ç—Ä–æ–∫.

            ### –≠—Ç–∞–ø 3: –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞
            –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ –∫–ª—é—á–∞–º–∏. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å null.

            {
              "text": "<–æ—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∞–±–∑–∞—Ü–∞–º–∏>",
              "rate": "<—á–∏—Å–ª–æ –∏–ª–∏ 0>",
              "deadline_date": "DD.MM.YYYY" –∏–ª–∏ null,
              "deadline_time": "HH:MM" –∏–ª–∏ null,
              "vacancy_id": "<id –∏–ª–∏ null>",
              "vacancy_title": "<–∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–ª–∏ null>"
              "utochnenie": true –∏–ª–∏ false
            }
            """
        },
        {
            "role": "user",
            "text": text,
        },
    ]

    try:
        result = (sdk.models.completions("yandexgpt")
                  .configure(temperature=0.1)
                  .run_deferred(messages, timeout=180)).wait()
        clean_text = result.alternatives[0].text.strip()
        

        # —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º JSON
        try:
            return json.loads(clean_text)
        except json.JSONDecodeError:
            # –µ—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ ast
            try:
                return ast.literal_eval(clean_text)
            except Exception as e2:
                
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å JSON –∏–∑ —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –æ–Ω –æ–±–µ—Ä–Ω—É—Ç –≤ –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç
                import re
                json_match = re.search(r'\{.*\}', clean_text, re.DOTALL)
                if json_match:
                    try:
                        json_text = json_match.group(0)
                        print(f"–ù–∞–π–¥–µ–Ω JSON –±–ª–æ–∫: {repr(json_text)}")
                        return json.loads(json_text)
                    except json.JSONDecodeError as e3:
                        print(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–≥–æ JSON: {e3}")
                
                return {
                    'text': None, 'rate': None, 'deadline_date': None,
                    'deadline_time': None, 'vacancy_id': None,
                    'vacancy_title': None, 'utochnenie': False
                }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {e}")
        return {
            'text': None, 'rate': None, 'deadline_date': None,
            'deadline_time': None, 'vacancy_id': None,
            'vacancy_title': None, 'utochnenie': False
        }

async def process_vacancy(text):
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞–∫–∞–Ω—Å–∏–∏.
    """
    should_reject = await check_duration_and_deadline_gpt(text)

    if should_reject == '–î–ê':
        print("–ü—Ä–æ–µ–∫—Ç –æ—Ç—Å–µ—è–Ω. –í–æ–∑–≤—Ä–∞—â–∞–µ–º None.")
        return {
            'text': None,
            'rate': None,
            'deadline_date': None,
            'deadline_time': None,
            'vacancy_id': None,
            'vacancy_title': None,
            'utochnenie': False
        }

    elif should_reject == '–£–¢–û–ß–ù–ò–¢–¨':
        print("–ù–µ—Ç —Å—Ä–æ–∫–æ–≤/–¥–µ–¥–ª–∞–π–Ω–∞. –û—Ç–º–µ—á–∞–µ–º utochnenie=True.")
        processed_text = await process_bonus_requirements_gpt(text)
        result = await del_contacts_gpt(processed_text)
        result["utochnenie"] = True
        return result

    else:  # '–ù–ï–¢'
        print("–ü—Ä–æ–µ–∫—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º '–ë—É–¥–µ—Ç –ø–ª—é—Å–æ–º'...")
        processed_text = await process_bonus_requirements_gpt(text)

        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É.")
        result = await del_contacts_gpt(processed_text)
        result["utochnenie"] = False
        return result


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# async def main():
#     vacancy_with_duration = """üÜî 1001
# ü•á Python Developer

# –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 6 –º–µ—Å
# –î–µ–¥–ª–∞–π–Ω: –¥–æ 31.12.2025 23:59

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: –≤ –†–õ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É
# –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã: 35 —Ä.–¥.

# –í–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ‚û°Ô∏è@SomeContact
#     """

#     vacancy_without_duration = """üÜî 1002
# ü•á Frontend Developer

# –û –ø—Ä–æ–µ–∫—Ç–µ:
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–∏—Å—Ç–µ–º—ã

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
# –°—Ç–∞–≤–∫–∞ –∑–∞–∫—É–ø–∫–∏: 2000
#     """

#     vacancy_with_expired_deadline = """üÜî 1003
# ü•á Java Developer

# –î–µ–¥–ª–∞–π–Ω: –¥–æ 01.05.2024 12:00
# –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 12 –º–µ—Å

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: –≤ –†–õ
# –û–ø–ª–∞—Ç–∞: 50 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π
#     """

#     print("\n=== –í–∞–∫–∞–Ω—Å–∏—è —Å–æ —Å—Ä–æ–∫–æ–º –∏ –¥–µ–¥–ª–∞–π–Ω–æ–º ===")
#     res1 = await process_vacancy(vacancy_with_duration)
#     print(res1)

#     print("\n=== –í–∞–∫–∞–Ω—Å–∏—è –±–µ–∑ —Å—Ä–æ–∫–æ–≤ ===")
#     res2 = await process_vacancy(vacancy_without_duration)
#     print(res2)

#     print("\n=== –í–∞–∫–∞–Ω—Å–∏—è —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º –¥–µ–¥–ª–∞–π–Ω–æ–º ===")
#     res3 = await process_vacancy(vacancy_with_expired_deadline)
#     print(res3)

# if __name__ == "__main__":
#     import asyncio
#     asyncio.run(main())